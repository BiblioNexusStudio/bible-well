// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace BibleWell.Aquifer.API.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ListLanguagesResponse : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The Code property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Code { get; set; }
#nullable restore
#else
        public string Code { get; set; }
#endif
        /// <summary>The EnglishDisplay property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EnglishDisplay { get; set; }
#nullable restore
#else
        public string EnglishDisplay { get; set; }
#endif
        /// <summary>The Id property</summary>
        public int? Id { get; set; }
        /// <summary>The LocalizedDisplay property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LocalizedDisplay { get; set; }
#nullable restore
#else
        public string LocalizedDisplay { get; set; }
#endif
        /// <summary>The ScriptDirection property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ScriptDirection { get; set; }
#nullable restore
#else
        public string ScriptDirection { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::BibleWell.Aquifer.API.Client.Models.ListLanguagesResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::BibleWell.Aquifer.API.Client.Models.ListLanguagesResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::BibleWell.Aquifer.API.Client.Models.ListLanguagesResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "Code", n => { Code = n.GetStringValue(); } },
                { "EnglishDisplay", n => { EnglishDisplay = n.GetStringValue(); } },
                { "Id", n => { Id = n.GetIntValue(); } },
                { "LocalizedDisplay", n => { LocalizedDisplay = n.GetStringValue(); } },
                { "ScriptDirection", n => { ScriptDirection = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("Code", Code);
            writer.WriteStringValue("EnglishDisplay", EnglishDisplay);
            writer.WriteIntValue("Id", Id);
            writer.WriteStringValue("LocalizedDisplay", LocalizedDisplay);
            writer.WriteStringValue("ScriptDirection", ScriptDirection);
        }
    }
}
#pragma warning restore CS0618
