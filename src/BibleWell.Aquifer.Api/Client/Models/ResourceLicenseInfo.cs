// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace BibleWell.Aquifer.API.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ResourceLicenseInfo : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The copyright property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::BibleWell.Aquifer.API.Client.Models.ResourceLicenseInfo_LicenseCopyright? Copyright { get; set; }
#nullable restore
#else
        public global::BibleWell.Aquifer.API.Client.Models.ResourceLicenseInfo_LicenseCopyright Copyright { get; set; }
#endif
        /// <summary>The licenses property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::BibleWell.Aquifer.API.Client.Models.ResourceLicenseInfo_LicenseDetails>? Licenses { get; set; }
#nullable restore
#else
        public List<global::BibleWell.Aquifer.API.Client.Models.ResourceLicenseInfo_LicenseDetails> Licenses { get; set; }
#endif
        /// <summary>The showAdaptationNoticeForEnglish property</summary>
        public bool? ShowAdaptationNoticeForEnglish { get; set; }
        /// <summary>The showAdaptationNoticeForNonEnglish property</summary>
        public bool? ShowAdaptationNoticeForNonEnglish { get; set; }
        /// <summary>The title property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::BibleWell.Aquifer.API.Client.Models.ResourceLicenseInfo"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::BibleWell.Aquifer.API.Client.Models.ResourceLicenseInfo CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::BibleWell.Aquifer.API.Client.Models.ResourceLicenseInfo();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "copyright", n => { Copyright = n.GetObjectValue<global::BibleWell.Aquifer.API.Client.Models.ResourceLicenseInfo_LicenseCopyright>(global::BibleWell.Aquifer.API.Client.Models.ResourceLicenseInfo_LicenseCopyright.CreateFromDiscriminatorValue); } },
                { "licenses", n => { Licenses = n.GetCollectionOfObjectValues<global::BibleWell.Aquifer.API.Client.Models.ResourceLicenseInfo_LicenseDetails>(global::BibleWell.Aquifer.API.Client.Models.ResourceLicenseInfo_LicenseDetails.CreateFromDiscriminatorValue)?.AsList(); } },
                { "showAdaptationNoticeForEnglish", n => { ShowAdaptationNoticeForEnglish = n.GetBoolValue(); } },
                { "showAdaptationNoticeForNonEnglish", n => { ShowAdaptationNoticeForNonEnglish = n.GetBoolValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::BibleWell.Aquifer.API.Client.Models.ResourceLicenseInfo_LicenseCopyright>("copyright", Copyright);
            writer.WriteCollectionOfObjectValues<global::BibleWell.Aquifer.API.Client.Models.ResourceLicenseInfo_LicenseDetails>("licenses", Licenses);
            writer.WriteBoolValue("showAdaptationNoticeForEnglish", ShowAdaptationNoticeForEnglish);
            writer.WriteBoolValue("showAdaptationNoticeForNonEnglish", ShowAdaptationNoticeForNonEnglish);
            writer.WriteStringValue("title", Title);
        }
    }
}
#pragma warning restore CS0618
